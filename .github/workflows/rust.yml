on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    strategy:
        matrix:
          include: 
            - runner: buildjet-8vcpu-ubuntu-2204
            - runner: buildjet-8vcpu-ubuntu-2204-arm

    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v3

    # Install and cache `cargo-sort`
    - uses: taiki-e/cache-cargo-install-action@v1
      with:
        tool: cargo-sort

    # Check dependencies are sorted
    - name: Sort
      run: cargo sort --workspace --check
    
    # Check formatting
    - name: Format
      run: cargo fmt --check
      
    # Install and cache `cargo-audit`
    - uses: taiki-e/cache-cargo-install-action@v1
      with:
        tool: cargo-audit
        locked: false # See https://github.com/taiki-e/cache-cargo-install-action/issues/2

    # Audits dependencies
    - name: Audit
      run: cargo audit
      
    # Install and cache `cargo-llvm-cov`
    - uses: taiki-e/cache-cargo-install-action@v1
      with:
        tool: cargo-all-features

    # Checks build
    - name: Check
      run: cargo check-all-features
      
    # Checks clippy
    - name: Clippy
      run: |
        rustup component add clippy
        cargo clippy --tests -- --deny warnings

    # Test
    - name: Test
      run: cargo test-all-features
    
    # Install and cache `cargo-llvm-cov`
    - uses: taiki-e/cache-cargo-install-action@v1
      with:
        tool: cargo-llvm-cov

    # Get code coverage
    - name: Generate code coverage
      run: cargo llvm-cov --workspace --lcov --output-path lcov.info

    # Upload code coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: lcov.info
        fail_ci_if_error: true